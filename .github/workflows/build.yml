- name: Run basic test
  run: |
    python -c "
    import os
    import pickle
    from fluxdb import FluxDB
    db_path = 'testdb'
    os.makedirs(db_path, exist_ok=True)
    os.makedirs(os.path.join(db_path, 'indexes'), exist_ok=True)
    db = FluxDB(db_path, buffer_size=1)  # Немедленный сброс буфера
    db.create_collection('test', indexed_fields=['name'])  # Индекс для name
    record_id = db.insert('test', {'name': 'test'})
    print(f'Inserted record_id: {record_id}')
    db._flush_buffer()  # Принудительный сброс
    results = db.find('test', {'name': 'test'})
    print(f'Find results: {results}')
    print(f'Files in testdb: {os.listdir(db_path)}')
    print(f'Files in testdb/indexes: {os.listdir(os.path.join(db_path, \"indexes\"))}')
    index_path = os.path.join(db_path, \"indexes\", \"test.idx\")
    try:
        with open(index_path, 'rb') as f:
            index_content = pickle.load(f)
            print(f'Index content: {index_content}')
    except Exception as e:
        print(f'Index file error: {e}')
    storage_content = db._load_all_records(db._get_collection_path('test'))
    print(f'Storage content: {storage_content}')
    buffer_content = [db.storage.decode_record(b) for b in db.buffer.get('test', []) if db.storage.decode_record(b)]
    print(f'Buffer content: {buffer_content}')
    assert len(results) == 1, f'Expected 1 result, got {len(results)}'
    print('Test passed!')
    "
