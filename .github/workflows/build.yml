name: Build and Test Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # 1) Linux: manylinux-колёса для pure Python (3.9–3.13)
  build_manylinux:
    name: Build Linux wheels (manylinux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install cibuildwheel
        run: pip install cibuildwheel==2.21.2

      - name: Build manylinux wheels
        run: cibuildwheel --output-dir dist/ --platform linux
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_ARCHS: "auto64"
          CIBW_BUILD_FRONTEND: "build"
          CIBW_ENVIRONMENT: "PIP_NO_BUILD_ISOLATION=false"
          CIBW_CONFIG_SETTINGS: "build.build_verbosity=1"

      - name: List Linux wheels
        run: ls -l dist/

      - name: Upload Linux wheels
        uses: actions/upload-artifact@v4
        with:
          name: linux-wheels
          path: dist/*.whl

  # 2) Windows: bdist_wheel для pure Python (3.9–3.13)
  build_windows:
    name: Build Windows wheels
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: pip install --upgrade pip setuptools wheel

      - name: Build wheel
        run: python setup.py bdist_wheel

      - name: List Windows wheels
        run: dir dist

      - name: Upload Windows wheels
        uses: actions/upload-artifact@v4
        with:
          name: windows-wheels-py${{ matrix.python-version }}
          path: dist/*.whl

  # 3) macOS: bdist_wheel для pure Python (3.9–3.13)
  build_macos:
    name: Build macOS wheels
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: pip install --upgrade pip setuptools wheel

      - name: Build wheel
        run: python setup.py bdist_wheel

      - name: List macOS wheels
        run: ls -l dist/

      - name: Upload macOS wheels
        uses: actions/upload-artifact@v4
        with:
          name: macos-wheels-py${{ matrix.python-version }}
          path: dist/*.whl

  # 4) Test: Проверяем установку и базовую функциональность
  test_wheels:
    name: Test wheels
    runs-on: ubuntu-latest
    needs: [build_manylinux, build_windows, build_macos]
    steps:
      - uses: actions/checkout@v4

      - name: Download Linux wheels
        uses: actions/download-artifact@v4
        with:
          name: linux-wheels
          path: dist/

      - name: Download Windows wheels
        uses: actions/download-artifact@v4
        with:
          name: windows-wheels-py3.12
          path: dist/

      - name: Download macOS wheels
        uses: actions/download-artifact@v4
        with:
          name: macos-wheels-py3.12
          path: dist/

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install wheel
        run: pip install dist/*-py3-none-any.whl

      - name: Run basic test
        run: |
          python -c "
          from fluxdb import FluxDB
          db = FluxDB('testdb')
          db.create_collection('test')
          db.insert('test', {'name': 'test'})
          assert len(db.find('test', {'name': 'test'})) == 1
          print('Test passed!')
          "        with:
          name: linux-wheels
          path: dist/

      - name: Download Windows wheels
        uses: actions/download-artifact@v4
        with:
          name: windows-wheels-py3.12
          path: dist/

      - name: Download macOS wheels
        uses: actions/download-artifact@v4
        with:
          name: macos-wheels-py3.12
          path: dist/

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install wheel
        run: pip install dist/*-py3-none-any.whl

      - name: Run basic test
        run: |
          python -c "
          from fluxdb import FluxDB
          db = FluxDB('testdb')
          db.create_collection('test')
          db.insert('test', {'name': 'test'})
          assert len(db.find('test', {'name': 'test'})) == 1
          print('Test passed!')
          "
