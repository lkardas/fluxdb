name: Build and Test Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      # На Linux нужен QEMU для ARM-эмуляции manylinux
      - name: Set up QEMU for aarch64
        if: runner.os == 'Linux'
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      # Ставим нужный Python
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Устанавливаем cibuildwheel
      - name: Install cibuildwheel
        run: pip install cibuildwheel

      # Собираем колёса
      - name: Build wheels with cibuildwheel
        shell: bash
        env:
          # строим только CPython 3.11–3.13
          CIBW_BUILD: cp311-*,cp312-*,cp313-*
          # пропускаем PyPy
          CIBW_SKIP: pp*
          # выводить в dist/
          CIBW_OUTPUT_DIR: dist/
        run: |
          cibuildwheel --output-dir dist/

      - name: List built wheels
        run: ls -l dist/

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl
