name: Build and Test Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      # 1) Устанавливаем Python нужной версии на runner’е
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 2) Устанавливаем cibuildwheel (он сам подхватит Docker на Linux и нужные SDK на Win/macOS)
      - name: Install cibuildwheel
        run: pip install cibuildwheel

      # 3) Собираем wheel’ы, вычисляя CIBW_BUILD в bash
      - name: Build wheels with cibuildwheel
        shell: bash
        run: |
          # формируем, например, "cp312-*" из "3.12"
          export CIBW_BUILD="cp$(echo ${{ matrix.python-version }} | tr -d .)-*"
          
          # запускаем cibuildwheel — получаем manylinux-, Windows- и macOS-колёса
          cibuildwheel --output-dir dist/

      # 4) Показываем, что получилось
      - name: List built wheels
        run: ls -l dist/

      # 5) Сохраняем артефакты
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl

