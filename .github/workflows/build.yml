name: Build Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels for Python ${{ matrix.python-version }} on ${{ matrix.architecture }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
        architecture: ["aarch64"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker for aarch64
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Verify project structure
      run: |
        ls -R
        cat setup.py
        cat MANIFEST.in

    - name: Build wheel in aarch64 environment
      run: |
        docker run -v $(pwd):/project -w /project multiarch/debian-debootstrap:arm64-bullseye bash -c "
          curl -fsSL https://deb.debian.org/debian-security/dists/bullseye-security/Release.gpg | gpg --dearmor > /etc/apt/trusted.gpg.d/debian-security-bullseye.gpg &&
          curl -fsSL https://deb.debian.org/debian/dists/bullseye/Release.gpg | gpg --dearmor > /etc/apt/trusted.gpg.d/debian-bullseye.gpg &&
          echo 'deb http://deb.debian.org/debian bullseye main' > /etc/apt/sources.list &&
          echo 'deb http://deb.debian.org/debian-security bullseye-security main' >> /etc/apt/sources.list &&
          apt-get update &&
          apt-get install -y python${{ matrix.python-version }} python${{ matrix.python-version }}-dev python3-pip build-essential libffi-dev &&
          python${{ matrix.python-version }} -m pip install --upgrade pip &&
          python${{ matrix.python-version }} -m pip install cython setuptools wheel &&
          python${{ matrix.python-version }} setup.py bdist_wheel
        "

    - name: List wheels
      run: ls -l dist/

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.architecture }}-python${{ matrix.python-version }}
        path: dist/*.whl
