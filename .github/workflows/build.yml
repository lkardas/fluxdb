name: Build and Test Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      # 1) Устанавливаем Python на runner’е
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 2) Устанавливаем зависимости сборки на Linux/macOS
      - name: Install build dependencies
        if: runner.os != 'Windows'
        run: |
          sudo apt-get update && sudo apt-get install -y build-essential libffi-dev python3-pip || true
          pip install --upgrade pip

      # 3) Устанавливаем cibuildwheel
      - name: Install cibuildwheel
        run: pip install cibuildwheel

      # 4) Собираем все колёса
      - name: Build wheels with cibuildwheel
        env:
          CIBW_PLATFORM: ${{ runner.os == 'Windows' && 'windows' || runner.os == 'macOS' && 'macos' || 'manylinux' }}
          CIBW_BUILD: cp${{ matrix.python-version.replace('.', '') }}-*
          CIBW_OUTPUT_DIR: dist/
        run: cibuildwheel --output-dir dist/

      # 5) Показываем результат
      - name: List built wheels
        run: ls -l dist/

      # 6) Загружаем как артефакт
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl
